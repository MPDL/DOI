<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.mpg.mpdl.doi</groupId>
	<artifactId>doxi</artifactId>
	<packaging>war</packaging>
	<version>1.5-SNAPSHOT</version>
	<name>doxi</name>
	
	<scm>
		<connection>scm:git:https://github.com/MPDL/DOI.git</connection>
		<developerConnection>scm:git:https://github.com/MPDL/DOI.git</developerConnection>
		<url>https://github.com/MPDL/DOI</url>
		<tag>HEAD</tag>
	</scm>
	
	<repositories>
		<repository>
			<id>nexus</id>
			<url>http://rd.mpdl.mpg.de/nexus/content/groups/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	
	<distributionManagement>
		<repository>
			<id>releases</id>
			<name>Nexus Managed Releases</name>
			<url>http://rd.mpdl.mpg.de/nexus/content/repositories/releases</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>Nexus Managed Snapshots</name>
			<url>http://rd.mpdl.mpg.de/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
	
	<build>
		<finalName>doxi</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<release>${jdk.version}</release>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<packagingExcludes>**/doxi.properties</packagingExcludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.2</version>
			</plugin>
			<plugin>
				<groupId>org.jibx</groupId>
				<artifactId>jibx-maven-plugin</artifactId>
				<version>1.3.3</version>
				<configuration>
					<schemaBindingDirectory>${project.build.outputDirectory}/jibx</schemaBindingDirectory>
					<includeSchemaBindings>
						<includeSchemaBindings>*_binding.xml</includeSchemaBindings>
					</includeSchemaBindings>
					<verbose>true</verbose>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>bind</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Globally exclude xml-apis, as they are part of the base library-->
			  <plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-enforcer-plugin</artifactId>
			    <version>1.4.1</version>
			    <executions>
			      <execution>
			        <goals>
			          <goal>enforce</goal>
			        </goals>
			        <configuration>
			          <rules>
			            <bannedDependencies>
			              <excludes>
			                <exclude>xml-apis:xml-apis</exclude>
			              </excludes>
			            </bannedDependencies>
			          </rules>
			        </configuration>
			      </execution>
			    </executions>
			  </plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jibx</groupId>
										<artifactId>
											jibx-maven-plugin
										</artifactId>
										<versionRange>
											[1.2.6,)
										</versionRange>
										<goals>
											<goal>bind</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.glassfish.jersey</groupId>
				<artifactId>jersey-bom</artifactId>
				<version>${jersey.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>4.1.6.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-bom</artifactId>
				<version>4.0.1.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<dependencies>
	<!-- 
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-jersey2-jaxrs</artifactId>
			<version>1.6.0</version>
		</dependency>
		-->
		
		<!-- Rewrite filter to forward old urls to new one -->
		<dependency>
		    <groupId>org.tuckey</groupId>
		    <artifactId>urlrewritefilter</artifactId>
		    <version>4.0.3</version>
		</dependency>
		
		<dependency>
		      <groupId>io.swagger.core.v3</groupId>
		      <artifactId>swagger-jaxrs2</artifactId>
		      <version>2.1.1</version>
    	</dependency>
		<dependency>
			<groupId>org.jibx</groupId>
			<artifactId>jibx-run</artifactId>
			<version>1.3.3</version>
		</dependency>
		<dependency>
			<groupId>org.jibx</groupId>
			<artifactId>jibx-extras</artifactId>
			<version>1.3.3</version>
			<exclusions>
		      <exclusion>
		        <groupId>xml-apis</groupId>
		        <artifactId>xml-apis</artifactId>
		      </exclusion>
		    </exclusions>
		</dependency>
		<!-- API, java.xml.bind module -->
		<dependency>
		    <groupId>jakarta.xml.bind</groupId>
		    <artifactId>jakarta.xml.bind-api</artifactId>
		    <version>2.3.2</version>
		</dependency>
		<!-- Runtime, com.sun.xml.bind module -->
		<dependency>
		    <groupId>org.glassfish.jaxb</groupId>
		    <artifactId>jaxb-runtime</artifactId>
		    <version>2.3.2</version>
		</dependency>
		<dependency>
			<groupId>net.sf.saxon</groupId>
			<artifactId>Saxon-HE</artifactId>
			<version>9.5.1-8</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>eclipselink</artifactId>
			<version>2.7.6</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-grizzly2-servlet</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-mvc-mustache</artifactId>
		</dependency>
		<dependency>
		  <groupId>org.glassfish.jersey.media</groupId>
		  <artifactId>jersey-media-json-jackson</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.glassfish.jersey.inject</groupId>
		    <artifactId>jersey-hk2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.test-framework.providers</groupId>
			<artifactId>jersey-test-framework-provider-grizzly2</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mindrot</groupId>
			<artifactId>jbcrypt</artifactId>
			<version>0.3m</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.2.10</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.30</version>
		</dependency>

		<!-- Use log4j2 as logging framework -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>2.15.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.15.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-jul</artifactId>
			<version>2.15.0</version>
		</dependency>
	</dependencies>
	
	<properties>
		<jdk.version>11</jdk.version>
		<jersey.version>2.30</jersey.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.warName>doxi</project.warName>
		<!-- Required due to a problem in OpenJDK, see https://bugs.java.com/bugdatabase/view_bug.do?bug_id=8212233-->
		<maven.javadoc.skip>true</maven.javadoc.skip>
	</properties>
	
	<profiles>
	<!-- this profile is used by developers -->
		<profile>
			<id>env-development</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<!-- copy the war folder into the tomcat deploy folder ($TOMCAT_HOME/webapps) -->
							<execution>
								<id>install</id>
								<phase>install</phase>
								<configuration>
									<tasks>
										<delete quiet="true" file="${tomcat.webapps}/${project.warName}.war" />
										<delete quiet="true" dir="${tomcat.webapps}/${project.warName}" />
										<copy overwrite="true" file="${project.build.directory}/${project.warName}.war" tofile="${tomcat.webapps}/${project.warName}.war" />
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.zeroturnaround</groupId>
						<artifactId>jrebel-maven-plugin</artifactId>
						<version>1.1.5</version>
						<executions>
							<execution>
								<id>generate-rebel-xml</id>
								<phase>process-resources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>
	
	</profiles>
	
</project>
